/**
 * isValidCveId
 *
 * Checks if the supplied value is a valid CVE ID in the format
 *
 * A CVE ID consists consists of `cve-` (case-insensitive)
 * followed by 4 integers, follwed by `-`, followed by 4 to 7 integers
 *
 * @param {string} value
 * @returns {boolean}
 */
function isValidCveId(value) {
  if (!value) {
    return;
  }

  const cveIdPattern = /^(cve-)?\d{4}-\d{4,7}$/gi;

  return value.match(cveIdPattern);
}

/**
 * isDomNode
 *
 * Checks that the supplied value is a DOM node
 *
 * @param {HTMLElement} node
 * @returns {boolean}
 */
function isDomNode(node) {
  try {
    return node instanceof HTMLElement;
  } catch (e) {
    return;
  }
}

/**
 * disableField
 *
 * Sets the `disabled` attribute on the supplied DOM node

 * @param {HTMLElement} field
 * @returns {undefined}
 */
function disableField(field) {
  if (!isDomNode(field)) {
    return;
  }

  field.setAttribute("disabled", true);
}

/**
 * enableField
 *
 * Removes the `disabled` attribute from the supplied DOM node
 *
 * @param {*} field
 * @returns {undefined}
 */
function enableField(field) {
  if (!isDomNode(field)) {
    return;
  }

  field.removeAttribute("disabled");
}

/**
 * attachRowEvents
 *
 * Adds event listeners to search row buttons
 *
 * @returns {undefined}
 */
function attachRowEvents() {
  const addRowButtons = document.querySelectorAll(".js-add-row");
  const removeRowButtons = document.querySelectorAll(".js-remove-row");

  addRowButtons.forEach((addRowButton) => {
    addRowButton.addEventListener("click", addRow);
  });

  removeRowButtons.forEach((removeRowButton) => {
    removeRowButton.addEventListener("click", removeRow);
  });
}

/**
 * addRow
 *
 * Adds Ubuntu version/status row to CVE search form
 *
 * @param {Event} e
 * @returns {undefined}
 */
function addRow(e) {
  e.preventDefault();

  const rowTemplate = document.getElementById("version-field-row-template");
  const newRowContainer = document.getElementById("new-row-container");
  const newRow = rowTemplate.content.cloneNode(true);

  newRowContainer.appendChild(newRow);

  attachRowEvents();
}

/**
 * removeRow
 *
 * Removes Ubuntu version/status row from CVE search form
 *
 * @param {Event} e
 * @returns {undefined}
 */
function removeRow(e) {
  e.preventDefault();

  const row = e.currentTarget.closest(".js-version-field-row");

  row.parentNode.removeChild(row);
}

export { isValidCveId, isDomNode, disableField, enableField, attachRowEvents };
